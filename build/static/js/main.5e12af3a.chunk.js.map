{"version":3,"sources":["homepage/HomepageHeader.tsx","homepage/HomepagePanel.tsx","homepage/HomepageIntoPanel.tsx","homepage/HomepageContactPanel.tsx","homepage/HomepageCoursesPanel.tsx","homepage/HomepageBody.tsx","homepage/HomepageFooter.tsx","homepage/Homepage.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["Header","styled","div","Text","Topbar","HomepageHeader","className","role","aria-label","LeftText","p","RightText","PanelContainer","HomepagePanel","props","left","right","HomepageIntroPanel","HomepageContactPanel","List","Item","Content","href","target","rel","HomepageCoursesPanel","PaddingBox","HomepageBody","Foot","HomepageFooter","Homepage","App","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.5e12af3a.chunk.js","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\n\nconst Header = styled.div`\n  background-color: MediumSlateBlue;\n  width: 100%;\n  height: 220px;\n  border-bottom: 2px solid #222;\n  border-top: 2px solid #222;\n  color: #efefef;\n  padding: 5px;\n`;\n\nconst Text = styled.div`\n  text-align: center;\n  font-size: 40px;\n  padding-top: 16px;\n`;\n\nconst Topbar = styled.div`\n  height: 80px;\n  background-color: white;\n  font-size: 40px;\n  font-family: 'Manjari', sans-serif;\n  padding-top: 14px;\n  padding-left: 30px;\n`;\n\nconst HomepageHeader: React.FC = () => {\n  return (\n    <>\n      <Topbar>Noah Cook</Topbar>\n      <Header className='element'>\n        <Text>\n          Hello!{' '}\n          <span role='img' aria-label='happy emoji'>\n            ðŸ˜„\n          </span>\n        </Text>\n      </Header>\n    </>\n  );\n};\n\nexport default HomepageHeader;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst LeftText = styled.p`\n  color: #205cfe;\n  font-weight: bold;\n  padding-left: 50px;\n  width: 300px;\n  font-size: 30px;\n`;\n\nconst RightText = styled.p`\n  width: 80%\n  left-align: left;\n  color: black;\n  margin: 0 auto;\n  font-size: 20px;\n`;\n\nconst PanelContainer = styled.div`\n  flex-flow: row wrap;\n  display: flex;\n`;\n\ntype Props = {\n  left: string;\n  right: any;\n};\n\nconst HomepagePanel: React.FC<Props> = props => {\n  return (\n    <PanelContainer>\n      <LeftText>{props.left}</LeftText>\n      <RightText>{props.right}</RightText>\n    </PanelContainer>\n  );\n};\nexport default HomepagePanel;\n","import React from 'react';\nimport HomepagePanel from './HomepagePanel';\n\nconst HomepageIntroPanel: React.FC = () => {\n  const left = `Who am I?`;\n\n  const right = (\n    <p>\n      I'm Noah Cook, a computer science major at the University of Florida.\n      Recently I just finished an amazing internship at Facebook, Seattle\n      working on messenger calls. My recent hobbies aside from programming are\n      cooking, table tennis, and photography.\n    </p>\n  );\n\n  return <HomepagePanel left={left} right={right} />;\n};\n\nexport default HomepageIntroPanel;\n","import React from 'react';\nimport HomepagePanel from './HomepagePanel';\nimport { List } from 'semantic-ui-react';\n\nconst HomepageContactPanel: React.FC = () => {\n  const left = `Contact me!`;\n\n  // TODO: add link to github and linkedin at the bottom\n  // icons that is\n  const right = (\n    <List>\n      <List.Item>\n        <List.Content>\n          <i className='fab fa-linkedin'></i>{' '}\n          <a\n            href='https://linkedin.com/in/noah-cook-6b4054148/'\n            target='_blank'\n            rel='noopener noreferrer'\n          >\n            Linkedin\n          </a>\n        </List.Content>\n      </List.Item>\n      <List.Item>\n        <List.Content>\n          <i className='fas fa-envelope'></i>{' '}\n          <a href='mailto:imnoahcook@gmail.com'>imnoahcook@gmail.com</a>{' '}\n        </List.Content>\n      </List.Item>\n      <List.Item>\n        <List.Content>\n          <i className='fab fa-github'></i>{' '}\n          <a\n            href='https://github.com/imnoahcook/'\n            target='_blank'\n            rel='noopener noreferrer'\n          >\n            https://github.com/imnoahcook\n          </a>{' '}\n        </List.Content>\n      </List.Item>\n    </List>\n  );\n\n  return <HomepagePanel left={left} right={right} />;\n};\n\nconst resume = (\n  <List.Item>\n    <List.Content>\n      <i className='fas fa-file'></i>\n      {'  '}\n      <a href='./noahCookResume.pdf'>Resume</a>{' '}\n    </List.Content>\n  </List.Item>\n);\n\nexport default HomepageContactPanel;\n","import React from 'react';\nimport HomepagePanel from './HomepagePanel';\nimport { List } from 'semantic-ui-react';\n\nconst HomepageCoursesPanel: React.FC = () => {\n  const left = `Current Courses`;\n\n  const right = (\n    <List>\n      <List.Item>\n        <List.Content>Competitive Programming</List.Content>\n      </List.Item>\n      <List.Item>\n        <List.Content>Operating Systems</List.Content>\n      </List.Item>\n      <List.Item>\n        <List.Content>Bioinformatics</List.Content>\n      </List.Item>\n      <List.Item>\n        <List.Content>Engineering Entrepreneurship</List.Content>\n      </List.Item>\n    </List>\n  );\n\n  return <HomepagePanel left={left} right={right} />;\n};\n\nexport default HomepageCoursesPanel;\n","import React from 'react';\nimport styled from 'styled-components';\nimport HomepageIntroPanel from './HomepageIntoPanel';\nimport HomepageContactPanel from './HomepageContactPanel';\nimport HomepageCoursesPanel from './HomepageCoursesPanel';\n\nconst PaddingBox = styled.div`\n  margin-top: 50px;\n`;\n\nconst HomepageBody: React.FC = () => {\n  return (\n    <>\n      <PaddingBox />\n      <HomepageIntroPanel />\n      <br />\n      <hr />\n      <PaddingBox />\n      <HomepageContactPanel />\n      <br />\n      <hr />\n      <PaddingBox />\n      <HomepageCoursesPanel />\n    </>\n  );\n};\n\nexport default HomepageBody;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst Foot = styled.div`\n  height: 100px;\n`;\n\nconst HomepageFooter: React.FC = () => {\n  return <Foot />;\n};\n\nexport default HomepageFooter;\n","import React from 'react';\nimport HomepageHeader from './HomepageHeader';\nimport HomepageBody from './HomepageBody';\nimport HomepageFooter from './HomepageFooter';\n\nconst Homepage: React.FC = () => {\n  return (\n    <>\n      <HomepageHeader />\n      <HomepageBody />\n      <HomepageFooter />\n    </>\n  );\n};\n\nexport default Homepage;\n","import React from 'react';\nimport './App.css';\nimport Homepage from './homepage/Homepage';\n\nconst App: React.FC = () => {\n  return (\n    <div className='App'>\n      <Homepage />\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { BrowserRouter } from 'react-router-dom';\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}